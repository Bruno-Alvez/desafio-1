services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: hypesoft-mongodb
    restart: unless-stopped
    profiles: ["dev", "prod"]
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-hypesoft}
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - hypesoft-network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 6

  # MongoDB Express (Admin UI)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: hypesoft-mongo-express
    restart: unless-stopped
    profiles: ["dev", "prod"]
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password123}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-password123}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_BASIC_AUTH_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_BASIC_AUTH_PASSWORD:-admin123}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - hypesoft-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8081"]
      interval: 15s
      timeout: 5s
      retries: 10

  # Keycloak (Authentication)
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: hypesoft-keycloak
    restart: unless-stopped
    profiles: ["dev", "prod"]
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      KC_DB: dev-file
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
    command: start-dev --import-realm
    volumes:
      - ./scripts/keycloak-realm.json:/opt/keycloak/data/import/realm.json:ro
    networks:
      - hypesoft-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health/ready"]
      interval: 15s
      timeout: 5s
      retries: 20

  # Backend API (.NET 9)
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hypesoft-api
    restart: unless-stopped
    profiles: ["dev", "prod"]
    ports:
      - "${API_PORT:-5000}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__MongoDB=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_INITDB_DATABASE:-hypesoft}?authSource=admin
      - Keycloak__Authority=http://keycloak:8080/realms/${KEYCLOAK_REALM:-hypesoft}
      - Keycloak__Audience=${KEYCLOAK_AUDIENCE:-hypesoft-api}
    depends_on:
      mongodb:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - hypesoft-network
    # Use imagem publicada pelo Dockerfile (sem volumes de código para produção)
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 12

  # Frontend (Next.js 14)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hypesoft-frontend
    restart: unless-stopped
    profiles: ["dev", "prod"]
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://api:8080}
      - NEXT_PUBLIC_KEYCLOAK_URL=${NEXT_PUBLIC_KEYCLOAK_URL:-http://keycloak:8080}
      - NEXT_PUBLIC_KEYCLOAK_REALM=${NEXT_PUBLIC_KEYCLOAK_REALM:-hypesoft}
      - NEXT_PUBLIC_KEYCLOAK_CLIENT_ID=${NEXT_PUBLIC_KEYCLOAK_CLIENT_ID:-hypesoft-frontend}
    depends_on:
      api:
        condition: service_healthy
    networks:
      - hypesoft-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 20

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: hypesoft-nginx
    restart: unless-stopped
    profiles: ["prod"]
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      frontend:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - hypesoft-network

volumes:
  mongodb_data:

networks:
  hypesoft-network:
    driver: bridge
